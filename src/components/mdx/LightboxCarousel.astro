---
export interface Props {
  images: { src: string; alt?: string }[];
}

const { images } = Astro.props;
---

<link
  href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css"
  rel="stylesheet"
/>

<div class="lightbox-carousel">
  <div class="carousel-track">
    {images.map((img, i) => (
      <a href={img.src} class="glightbox" data-gallery="fieldphotos">
        <img src={img.src} alt={img.alt || `Image ${i + 1}`} loading="lazy" />
      </a>
    ))}
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/glightbox/dist/js/glightbox.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    GLightbox({ selector: '.glightbox' });
  });
</script>

<style>
  .lightbox-carousel {
    overflow-x: auto;
    white-space: nowrap;
    padding-bottom: 1rem;
  }

  .carousel-track {
    display: flex;
    gap: 1rem;
  }

  .carousel-track a {
    flex: 0 0 auto;
    display: block;
    max-width: 300px;
  }

  .carousel-track img {
    width: 100%;
    height: 200px;
    object-fit: contain;
    border-radius: 8px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    cursor: zoom-in;
    transition: transform 0.2s ease;
  }

  .carousel-track img:hover {
    transform: scale(1.03);
  }
</style>
